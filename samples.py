#!/usr/bin/env python3

if __name__ == "__main__":
    import importlib
    import os
    import sys
    import tempfile
    direpa_script_parent=os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
    module_name=os.path.basename(os.path.dirname(os.path.realpath(__file__)))
    sys.path.insert(0, direpa_script_parent)
    pkg = importlib.import_module(module_name)
    del sys.path[0]

    args=sys.argv[1:]

    direpa_project=os.path.join(tempfile.gettempdir(), "gitlib")
    if os.path.exists(direpa_project):
        pkg._shell.rmtree(direpa_project)
    os.makedirs(direpa_project)
    direpa_repository=os.path.join(direpa_project, "repo")
    direpa_repository_git=os.path.join(direpa_project, "repo", "src.git")
    os.makedirs(direpa_repository)
    direpa_src=os.path.join(direpa_project, "src")
    os.makedirs(direpa_src)
    git=pkg.GitLib(direpa=direpa_src)
    git.init()
    git.set_user(username="john.doe", email="john.doe@email.com")
    open(os.path.join(git.direpa_root, "todo.txt"), "w").close()
    git.commit(message="commit main")
    git.clone(direpa_src=direpa_src, direpa_dst=direpa_repository_git, remote_name="origin", bare=True, shared=None, default_branch="main", show_only=False)
    git.set_remote(name="origin", repository_path=direpa_repository_git)
    git.push(remote_name="origin", set_upstream=True, quiet=True, show_only=False)
    git.checkoutb(branch_name="work")
    git.commit_empty(message="commit work")
    git.push(remote_name="origin", set_upstream=True, quiet=True, show_only=False)
    git.checkoutb(branch_name="dev")
    git.commit_empty(message="commit dev")
    git.push(remote_name="origin", set_upstream=True, quiet=True, show_only=False)

    git.checkout(branch_name="work", quiet=True, show_only=True)
    git.checkoutb(branch_name="work", quiet=True, show_only=True)
    git.clone(direpa_src=direpa_src, direpa_dst=direpa_repository, remote_name="origin", quiet=True, bare=True, shared=None, default_branch="main", show_only=True)
    git.cmd(cmd=["ls", "-a"], show_only=True)
    git.commit(message="commit message", quiet=True, show_only=True)
    git.commit_empty(message="commit message", quiet=True, show_only=True)
    git.delete_branch_local(branch_name="work", show_only=True)
    git.delete_branch_remote(remote_name="origin", branch_name="work", show_only=True)
    git.delete_remote(remote_name="origin", show_only=True)
    git.fetch_tags(show_only=True)
    git.fetch(remote="origin", quiet=True, show_only=True)
    print(git.get_active_branch_name(show_cmds=True))
    print(git.get_all_branches())
    print(git.get_branch_compare_status(active_branch="dev", compare_branch="work", show_cmds=True))
    print(git.get_diren_root())
    print(git.get_direpa_root(show_cmds=True))
    print(git.get_first_commit(show_cmds=True))
    print(git.get_remote_branches(remote_name="origin", show_cmds=True))
    print(git.get_local_branches(show_cmds=True))
    print(git.get_local_remote_branches(show_cmds=True))
    print(git.get_principal_branch_name())
    print(git.get_remote(name="origin", filenpa_config=None, show_cmds=True))
    print(git.get_user_email(filenpa_config=None, show_cmds=True))
    print(git.get_user_name(filenpa_config=None, show_cmds=True))
    print(git.get_untracked_files(show_cmds=True))
    print(git.has_head(show_cmds=True))
    print(git.get_remotes(show_cmds=True))
    print(git.has_remote(name="origin", show_cmds=True))
    git.init(quiet=True, show_only=True)
    print(git.get_is_bare_repository(show_cmds=True))
    print(git.is_branch_on_local(branch_name="dev", show_cmds=True))
    print(git.is_branch_on_local_remote(remote_name="origin", branch_name="dev", show_cmds=True))
    print(git.is_branch_on_remote(remote_name="origin", branch_name="dev", show_cmds=True))
    print(git.is_branch_uptodate(show_cmds=True))
    print(git.is_direpa_git(fail_exit=True, show_cmds=True))
    print(git.is_empty_repository(show_cmds=True))
    git.merge(branch_name="work", show_only=True)
    git.merge_noff(branch_name="work", show_only=True)
    print(git.need_commit(show_files=True, show_cmds=True))
    git.pull(remote="origin", quiet=True, show_only=True)
    git.push(remote_name="origin", branch_name="dev", set_upstream=True, quiet=True, show_only=True)
    git.set_annotated_tags(tag="v1.2.3", message="commit message", remote_names=None, show_only=True)
    git.set_remote(name="origin", repository_path=direpa_repository, show_only=True)
    git.set_user(username="john.doe", email="not-set", show_only=True)
    git.get_filenpa_config(filenpa_config=None)
    git.set_user_email(email="not-set", filenpa_config=None, show_only=True)
    git.set_user_name(name="john.doe", filenpa_config=None, show_only=True)
    git.set_shared_repo(filenpa_config=None, shared="group", show_only=True)
    git.set_bare_repo_default_branch("main", direpa_repo=None, show_only=True)
    git.set_upstream(remote_name="origin", branch_name="work", filenpa_config=None, show_only=True)

